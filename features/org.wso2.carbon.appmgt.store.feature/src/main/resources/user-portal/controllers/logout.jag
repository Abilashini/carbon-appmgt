<%
(function () {
    include("/jagg/jagg.jag");
    var ssoIdpProvider = jagg.module('manager').getAPIStoreObj();
    var user = session.get("LOGGED_IN_USER");
    var auditLog = require('/modules/auditLog/logger.js');
    if (user === null) {
        response.sendRedirect('/store');
    } else {
        var config = require('/config/store.js').config(),
                sso = require('sso'),
                process = require("process"),
                uuid = require('uuid'),
                sso_sessions = application.get('sso_sessions'),
                sessionId = session.getId(),
                encodedSAMLLogoutRequest =
                    sso.client.getEncodedSAMLLogoutRequest(user, session.get("sessionIndex"),
                                                           config.ssoConfiguration.issuer),
                customDomain = request.getHeader("X-WSO2-Custom-Domain"),
                serverHost = process.getProperty('server.host'),
                postUrl = config.ssoConfiguration.identityProviderURL;

        var log = new Log();

        caramel = require('caramel');
        var contextPath = caramel.configs().context;

        var tenantId = session.get("tenantId");
        var tenantDomain = carbon.server.tenantDomain({
            tenantId: tenantId
        });

        var relayStateURL;
        if (customDomain) {
            relayStateURL = "https://" + customDomain;
            if (log.isDebugEnabled()) {
                log.debug("Custom domain : " + customDomain + " is configured. RelayStateURL constructed accordingly." +
                        " RelayStateURL: " + relayStateURL);
            }

        } else {
            if (tenantDomain) {
                relayStateURL = contextPath + "/t/" + tenantDomain;
            } else {
                relayStateURL = contextPath;
            }

            var reversProxyEnabled = caramel.configs().reverseProxyEnabled;
            var reverseProxyHost = caramel.configs().reverseProxyHost;

            if (reversProxyEnabled && reverseProxyHost) {
                relayStateURL = reverseProxyHost + relayStateURL;

                if (log.isDebugEnabled()) {
                    log.debug("Reverse proxy enabled with host:  " + reverseProxyHost + ". RelayStateURL" +
                            " constructed accordingly. RelayStateURL: " + relayStateURL);
                }
            }
        }

        // Persist relay state in session.
        var relayStateID = uuid.generate().toString();
        session.put(relayStateID, relayStateURL);

        if (log.isDebugEnabled()) {
            log.debug("User portal session index : " + session.get("sessionIndex"));
        }

        log.info("User: " + user + " logged out from tenant : " + tenantDomain);
        auditLog.writeLog(tenantId, user, "UserSignedOut", "Logout", "", "", "");

        %>
            <div>
                <p>You are now redirected to Identity Server. If the
                redirection fails, please click the post button.</p>

                <form id="logoutForm" method="post" action="<%=postUrl%>">
                    <p>
                        <input type="hidden" name="SAMLRequest"value="<%=encodedSAMLLogoutRequest%>"/>
                        <input type="hidden" name="RelayState" value="<%=relayStateID%>"/>
                        <input type="hidden" name="SSOAuthSessionID" value="<%=sessionId%>"/>
                        <button type="submit">POST</button>
                    </p>
                </form>
            </div>
            <script type = "text/javascript" >
                document.forms[0].submit();
            </script>

        <%
    }
}());
%>
