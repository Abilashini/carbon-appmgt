<%
/*
 *  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
var caramel;
var SubscriptionService;
var subsApi;
var AuthService;
var authenticator;
var log = new Log('favouriteapps');

include('../modules/jagg/jagg.jag');

require('/modules/store.js').exec(function (ctx) {
    var sso = ctx.sso,
        store = ctx.store,
        user = ctx.user,
        storeTenantId = ctx.tenant.tenantId,
        storeTenantDomain = ctx.tenant.domain;

    //if user not logged in redirect to login page
    if (!user) {
        var referer = store.getReferer(request);
        var redirectUrl = store.getRedirectUrl("/login?referer=" + referer);
        response.sendRedirect(redirectUrl);
        return;
    }
    caramel = require('caramel');
    //initialize subscription service
    var SubscriptionService = require(getServiceDir('subscription.js')).serviceModule;
    var subsApi = new SubscriptionService.SubscriptionService();
    subsApi.init(jagg, session);

    //initialize authentication service
    var AuthService = require(getServiceDir('authentication.js')).serviceModule;
    var authenticator = new AuthService.Authenticator();
    authenticator.init(jagg, session);

    //Get subscription configuration options
    var subscriptionUtil = require('../themes/store/js/logic/subscriptions/subscription-config.js');
    var isSelfSubscriptionEnabled = subscriptionUtil.isSelfSubscriptionEnabled();
    var isEnterpriseSubscriptionEnabled = subscriptionUtil.isEnterpriseSubscriptionEnabled();
    var userData = authenticator.getLoggedInUser();

    var hideAllAppsLink = false;
    //if both subscriptions off no need to show the link for all apps,
    //because all apps will be displayed in myapps page.
    if (!isSelfSubscriptionEnabled && !isEnterpriseSubscriptionEnabled) {
        hideAllAppsLink = true;
    }

    //Get the all favourite apps of logged in user
    var apps = subsApi.getAllFavouriteApps(user.username, user.tenantId,
                                           storeTenantDomain);
    //Check whether use has selected favourite page as defualt ladning page
    //This is needed to show correct icon(set as home page /remove from home page) to user.
    var hasFavouritePage = subsApi.hasFavouritePage(user.username, user.tenantId,
                                                    storeTenantDomain).hasFavouritePage;

    caramel.render({
                       header: {
                           user: userData,
                           sso: sso,
                           searchOff: true,
                           hideAllAppsLink: hideAllAppsLink,
                           isHomePage: hasFavouritePage,
                           myFav: true,
                           storeTenantDomain: storeTenantDomain
                       },
                       sso: sso,
                       favouriteApps: apps
                   }, request, response, session);

}, request, response, session);


function getServiceDir(serviceName) {
    return '../services/' + serviceName;
}

%>

